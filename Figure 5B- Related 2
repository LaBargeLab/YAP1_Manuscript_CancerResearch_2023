#DESeq2
library(DESeq2)
#Make a variable pointing to path your htseq count files are in
directory <- "~/Desktop/RNAseq_Analyses/2020_2021_Analyses_Old_Computer/DESeq2_Analyses_DataGenerated/Yap1_2_4_184A1_countfiles/"

#Generate a sample table
#Get the names of all files want to analyze
sampleFiles1 <- grep("26247",list.files(directory),value=TRUE)
sampleFiles2 <- grep("26248",list.files(directory),value=TRUE)
sampleFiles3 <- grep("26249",list.files(directory),value=TRUE)
sampleFiles4 <- grep("26250",list.files(directory),value=TRUE)

sampleFiles <- c(sampleFiles1,sampleFiles2,sampleFiles3,sampleFiles4)

#Get names of samples want to analyze
NamesOfSamples <- sampleFiles
NamesOfSamples2 <- gsub(pattern = "\\d+_Yap", replacement = "Yap", x = NamesOfSamples)
NamesOfSamples3 <- gsub(pattern = "_L999.bam.count", replacement = "", x = NamesOfSamples2)

#Make a list of condition 1, ctrl or yap samples
CtrlorYap <- c("Ctrl",rep("Yap",3))

#Make a table of sample names, file names, and condition
sampleTable <- data.frame(sampleName = NamesOfSamples3,
                          fileName = sampleFiles,
                          phenotype = CtrlorYap)

#Build DESeqDataSet using DESeqDataSetFromHTSeqCount function
Yap4dds <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
                                      directory = directory,
                                      design= ~ phenotype)

#Pre-filtering, remove rows of genes with less than 10 reads, makes things faster
keep <- rowSums(counts(Yap4dds)) >= 10
Yap4dds <- Yap4dds[keep,]

#Run deseq algorithm on dataset
Yap4dds <- DESeq(Yap4dds)

#Calculate rlog transformed values of count data
#Returns SummarizedExperiment object which contains rlog-transformed values in its assay slot 
rld <- rlog(Yap4dds)
dat <- assay(rld)


mycdata <- dat["ENSG00000136997",]
df <- data.frame(mycdata)

dock4data <- dat["ENSG00000128512",]
df$dock4data <- dock4data

SampleType <- as.factor(NamesOfSamples3)
df$SampleName <- SampleType

Transduction <-as.factor(CtrlorYap)
df$Transduction <- Transduction

Passage <- as.numeric(c("12","12","16","22"))
df$Passage <- Passage

df <- subset(df,Transduction == "Yap")

library(ggplot2)

pdf("YAP2Experiment_MycExpression_2.pdf")
ggplot(df, aes(x=Passage, y=mycdata)) + 
  geom_point() +
  geom_smooth(span=1, col='yellow',size=1) +
  theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
dev.off()
