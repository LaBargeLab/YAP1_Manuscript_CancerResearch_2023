####Plot YAP1 expression in Ctrl-MYC and YAP-MYC transduced cells

library(DESeq2)
#Make a variable pointing to path your htseq count files are in
directory <- "~/Desktop/RNAseq_Analyses/2020_2021_Analyses_Old_Computer/DESeq2_Analyses_DataGenerated/Yap4_184A1_Ensembl_Count_Files/"

#Generate a sample table
#Get the names of all files want to analyze
sampleFiles1 <- grep("Myc",list.files(directory),value=TRUE)

#Get names of samples want to analyze
NamesOfSamples <- sampleFiles1
NamesOfSamples2 <- gsub(pattern = "^\\d+_", replacement = "", x = NamesOfSamples)
NamesOfSamples3 <- gsub(pattern = "_S\\d+_L999.bam.count", replacement = "", x = NamesOfSamples2)

#Make a list of sample type
SampleType <- gsub(pattern = "_\\d$", replacement = "", x = NamesOfSamples3)

#Make a list of condition 1, ctrl or yap samples
CtrlorYap <- c(rep("Ctrl",6),rep("Yap",6))
#Make a list of passages
Passage <- c(rep("15p",3),rep("21p",3),rep("15p",3),rep("21p",3))

#Make a table of sample names, file names, and condition
sampleTable <- data.frame(sampleName = NamesOfSamples3,
                          fileName = sampleFiles1,
                          phenotype = CtrlorYap,
                          sampletype = SampleType,
                          passage = Passage)

#Build DESeqDataSet using DESeqDataSetFromHTSeqCount function
Yap4dds <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
                                      directory = directory,
                                      design= ~ sampletype)

#Pre-filtering, remove rows of genes with less than 10 reads, makes things faster
keep <- rowSums(counts(Yap4dds)) >= 10
Yap4dds <- Yap4dds[keep,]

#Run deseq algorithm on dataset
Yap4dds <- DESeq(Yap4dds)

#Generate regularized log values
rld <- rlog(Yap4dds)
dat <- assay(rld)

##Plot YAP expression
yapdata <- dat["ENSG00000137693",]
yapdataframe <- data.frame(yapdata)

SampleType <- as.factor(SampleType)
yapdataframe$SampleName <- SampleType

Transduction <- as.factor(Transduction)
yapdataframe$Transduction <- Transduction

Passage <- as.factor(Passage)
yapdataframe$Passage <- Passage

library(ggplot2)
pdf("Yap1 Expression_boxandwhisker_dotplot_1.pdf")
ggplot(yapdataframe, aes(x=Transduction, y=yapdata)) + 
  geom_boxplot() +
  geom_dotplot(aes(fill=Passage),binaxis='y',stackdir='center', position=position_dodge(.2) ) +
  ylab("Log Transformed Count") +
  theme_bw() + 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
  theme(aspect.ratio = 9/12) +
  theme(axis.text.x = element_text(size=14)) +
  theme(axis.title.y = element_text(size=14)) +
  theme(axis.title.x = element_blank()) +
  theme(legend.text=element_text(size=14)) +
  theme(legend.title=element_text(size=14)) +
  theme(axis.text.y = element_text(size=12)) 
dev.off()
