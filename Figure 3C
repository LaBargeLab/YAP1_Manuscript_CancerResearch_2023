####Heatmap

#DESeq2
library(DESeq2)
#Make a variable pointing to path your htseq count files are in
directory <- "~/Desktop/RNAseq_Analyses/2020_2021_Analyses_Old_Computer/DESeq2_Analyses_DataGenerated/Yap1_2_4_184A1_countfiles/"

#Generate a sample table
#Get the names of all files want to analyze
sampleFiles1 <- grep("14914",list.files(directory),value=TRUE)
sampleFiles2 <- grep("14915",list.files(directory),value=TRUE)
sampleFiles3 <- grep("26247",list.files(directory),value=TRUE)
sampleFiles4 <- grep("26248",list.files(directory),value=TRUE)
sampleFiles5 <- grep("33708",list.files(directory),value=TRUE)
sampleFiles6 <- grep("33709",list.files(directory),value=TRUE)
sampleFiles7 <- grep("33710",list.files(directory),value=TRUE)
sampleFiles8 <- grep("33714",list.files(directory),value=TRUE)
sampleFiles9 <- grep("33715",list.files(directory),value=TRUE)
sampleFiles10 <- grep("33716",list.files(directory),value=TRUE)
sampleFiles <- c(sampleFiles1,sampleFiles2,sampleFiles3,sampleFiles4,sampleFiles5,sampleFiles6,sampleFiles7,sampleFiles8,sampleFiles9,sampleFiles10)

#Get names of samples want to analyze
NamesOfSamples <- c("240LB-p16sh-11p-1",
                    "240LB-p16sh-YAP-12p-1",
                    "240LB-p16sh-Ctrl-12p-2",
                    "240LB-p16sh-YAP-12p-2",
                    "184D-p16sh-Ctrl-12p-A",
                    "184D-p16sh-Ctrl-12p-B",
                    "184D-p16sh-Ctrl-12p-C",
                    "184D-p16sh-YAP-12p-A",
                    "184D-p16sh-YAP-12p-B",
                    "184D-p16sh-YAP-12p-C")

#Make a list of condition 1, ctrl or yap samples
CtrlorYap <- c("Ctrl","Yap","Control","Yap",rep("Control",3),rep("Yap",3))

#Make a list of the background experiment/run
experiment <- c(rep("1",2),rep("2",2),rep("4",6))

#Make a table of sample names, file names, and condition
sampleTable <- data.frame(sampleName = NamesOfSamples,
                          fileName = sampleFiles,
                          phenotype = CtrlorYap,
                          background = experiment)

#Build DESeqDataSet using DESeqDataSetFromHTSeqCount function
Yap4dds <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
                                      directory = directory,
                                      design= ~ background + phenotype)

#Pre-filtering, remove rows of genes with less than 10 reads, makes things faster
keep <- rowSums(counts(Yap4dds)) >= 10
Yap4dds <- Yap4dds[keep,]

#Run deseq algorithm on dataset
Yap4dds <- DESeq(Yap4dds)

#Order factor levels
Yap4dds$phenotype <- relevel(Yap4dds$phenotype, ref = "Control")

#Makes a result table
Yap4dds <- DESeq(Yap4dds)
res <- results(Yap4dds, name = "phenotype_Yap_vs_Control", alpha = 0.05)

#Batch Correct
library(sva)

#Calculate rlog transformed values of count data
#Returns SummarizedExperiment object which contains rlog-transformed values in its assay slot 
rld <- rlog(Yap4dds)
dat <- assay(rld)
batch = Yap4dds$background
mod0 <- model.matrix(~   1, colData(Yap4dds))
combat_data = ComBat(dat=dat, batch=batch,mod=mod0,par.prior=TRUE, prior.plots=FALSE)

#Read in gene list of interest
OverlapStemGenes <- read.table("~/Desktop/RNAseq_Analyses/2022_04/2022_04_06/YAPPost-stasisSigGenes_Overlap_ImmortalGenes_LongerList_atleast2immortallists.csv",sep =",",header = TRUE)
GeneListOfInterest <- OverlapStemGenes$Genes
#Convert genes of interest to ensemblid
library(EnsDb.Hsapiens.v86)
GenesEnsembl <- ensembldb::select(EnsDb.Hsapiens.v86, keys = GeneListOfInterest, keytype = "SYMBOL", columns = c("GENEID"))

#Make data matrix with genes of interest
NamesOfInterest <- GenesEnsembl$GENEID
GeneNames <- rownames(combat_data)
select <- which(GeneNames %in% NamesOfInterest)
#Store rld values in results variable
res3 <- combat_data[select,]

#convert results to gene symbol
GenesSymbol <- ensembldb::select(EnsDb.Hsapiens.v86, keys = row.names(res3), keytype = "GENEID", columns = c("SYMBOL"))
row.names(res3) <- GenesSymbol$SYMBOL

#Scale rows, first and last lines transpose table so rows are columns and columns are rows
tres3 <- t(res3)
scaletres3 <- scale(tres3)
scaleres3 <- t(scaletres3)

#Visualized differences with heatmap
sampleMatrix <- as.matrix(scaleres3)

library(pheatmap)
pheatmap(sampleMatrix)

Transduction = c("-", "YAP","Ctrl","YAP",rep("Ctrl",3),rep("YAP",3))

my_sample_col <- data.frame(Transduction)
row.names(my_sample_col) <- colnames(sampleMatrix)

my_sample_row <- data.frame("HMEC_MYC_15p" = OverlapStemGenes$HMEC.MYC.15p, 
                            "HMEC_MYC_21p" = OverlapStemGenes$HMEC.MYC.21p,
                            "Dermal_Papilla" = OverlapStemGenes$Dermal.Papilla,
                            "HMEC_BaP" = OverlapStemGenes$HMEC.BaP,
                            "FB_hTERT_2003" = OverlapStemGenes$FB.hTERT.2003,
                            "FB_hTERT_2021" = OverlapStemGenes$FB.hTERT.2021)

row.names(my_sample_row) <- OverlapStemGenes$Genes

ann_colors = list(Transduction = c("-" = "gray45", "Ctrl" = "black", "YAP" = "deeppink1"),
                  HMEC_MYC_15p = c("yes"= "black", "no" = "white"),
                  HMEC_MYC_21p = c("yes"= "black", "no" = "white"),
                  Dermal_Papilla = c("yes"= "black", "no" = "white"),
                  HMEC_BaP = c("yes"= "black", "no" = "white"),
                  FB_hTERT_2003= c("yes"= "black", "no" = "white"),
                  FB_hTERT_2021= c("yes"= "black", "no" = "white"))

library(pheatmap)
pheatmap(sampleMatrix,
         annotation_col = my_sample_col, 
         annotation_row = my_sample_row, 
         annotation_colors = ann_colors, 
         border_col = NA,
         color=colorRampPalette(c("#feb326", "white", "#7f58af"))(50),
         fontsize_row = 6,
         labels_col = c("","","","","","","","","",""),
         filename = "BatchCorrectedRLD_AllEarlyYapSamples_PHeatmap_ImmortalGenes_1.pdf")
